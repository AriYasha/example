<%--
  Created by IntelliJ IDEA.
  User: ирина
  Date: 18.03.2019
  Time: 11:50
  To change this template use File | Settings | File Templates.
--%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <!-- set the encoding of your site -->
    <meta charset="utf-8">
    <!-- set the viewport width and initial-scale on mobile devices -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- set the HandheldFriendly -->
    <meta name="HandheldFriendly" content="True">
    <!-- set the description -->
    <meta name="description" content="STUDYLMS HTML Template">
    <!-- set the Keyword -->
    <meta name="keywords" content="">
    <meta name="author" content="STUDYLMS HTML Template">
    <!-- set the page title -->
    <title>БНТУ HTML Template</title>
    <!-- include google roboto font cdn link -->
    <link href="https://fonts.googleapis.com/css?family=Lato:300,300i,400,400i,700,700i%7COpen+Sans:300,300i,400,400i,600,600i,700,700i"
          rel="stylesheet">
    <!-- include the site bootstrap stylesheet -->
    <link rel="stylesheet" href="resources/css/bootstrap.css">
    <title>Title</title>


    <!-- include the site stylesheet -->
    <link rel="stylesheet" href="resources/css/plugins.css">
    <!-- include the site stylesheet -->
    <link rel="stylesheet" href="resources/css/colors.css">
    <!-- include the site stylesheet -->
    <link rel="stylesheet" href="resources/style.css">
    <!-- include the site responsive stylesheet -->
    <link rel="stylesheet" href="resources/css/responsive.css">

    <style>
        .bold{
            color: #303F9F;
            font-size: 120%;

        }
        .bold1 {
            color: #0f0f0f;
            font-size: 150%;
        }
        a{
            line-height:1.5em;
        }


    </style>
</head>
<body>
<!-- main container of all the page elements -->
<div id="wrapper">
    <!-- header of the page -->
    <header id="page-header" class="page-header-stick">
        <!-- top bar -->
        <div class="top-bar bg-dark text-gray">
            <div class="container">
                <div class="row top-bar-holder">
                    <div class="col-xs-9 col">
                        <!-- bar links -->
                        <ul class="font-lato list-unstyled bar-links">
                            <li>
                                <a href="index.jsp">
                                    <strong class="dt element-block text-capitalize hd-phone">Call :</strong>
                                    <strong class="dd element-block hd-phone">+375(29) 665 02 10</strong>
                                    <i class="fas fa-phone-square hd-up-phone hidden-sm hidden-md hidden-lg"><span
                                            class="sr-only">phone</span></i>
                                </a>
                            </li>
                            <li>
                                <a href="mailto:&#069;&#120;&#097;&#109;&#112;&#108;&#101;&#064;&#100;&#111;&#109;&#097;&#105;&#110;&#046;&#099;&#111;&#109;">
                                    <strong class="dt element-block text-capitalize hd-phone">Email :Yudenkovvs@mail.ru</strong>

                                    <i class="fas fa-envelope-square hd-up-phone hidden-sm hidden-md hidden-lg"><span
                                            class="sr-only">email</span></i>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-xs-3 col justify-end">
                        <!-- user links -->
                        <ul class="list-unstyled user-links fw-bold font-lato">
                            <li><a href="login-regestration.jsp" class="lightbox">Login</a> <span class="sep">|</span> <a
                                    href="login-regestration.jsp" class="lightbox">Register</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>


        <!-- navbar collapse -->

        <!-- navbar form -->
        <form action="#" class="navbar-form navbar-search-form navbar-right">
            <a class="fas fa-search search-opener" role="button" data-toggle="collapse"
               href="#searchCollapse" aria-expanded="false" aria-controls="searchCollapse"><span
                    class="sr-only">search opener</span></a>
            <!-- search collapse -->
            <div class="collapse search-collapse" id="searchCollapse">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Search &hellip;">
                    <button type="button" class="fas fa-search btn"><span
                            class="sr-only">search</span></button>
                </div>
            </div>
        </form>





    </header>




    <section class="container user-log-block">
        <form action="index.jsp" method="get">
            <button type="submit" class="btn btn-warning" >Вернуться на главную страницу</button>
        </form>



        <div class="row">
            <div class="col-xs-2 col-md-2">
                <p> <a href="theory.jsp">Общие сведения о периферийных устройствах и их связи с микроЭВМ </a>
                <p><a href="theoryTwo.jsp">Локальная вычислительная сеть</a>
                <p><a  href="theoryThree.jsp">Физическая среда передачи данных</a>
                <p><a  href="theoryFour.jsp">Видеосистема</a>
                <p><a  href="theoryFive.jsp">Внешние запоминающие устройства</a>

            </div>
            <div class="col-xs-10 col-md-10">
                <p  class="bold1">Организация и функционирование ЭВМ и ПУ</p>
                <p class="bold1">Общие сведения о периферийных устройствах и их связи с микроЭВМ</p>
                <form action="/result?action=1" method="post">
                    1.1.Назначение и классификация
                    Для эффективного использования ПЭВМ большое значение имеет оборудование их периферийными устройствами. Функциональные возможности ПЭВМ в значительной мере зависят от применяемого набора и технических характеристик периферийных устройств.
                    Периферийные устройства ПЭВМ предназначены для ввода, вывода и хранения данных с последующим их вводом в ПЭВМ, являются средствами коммуникации ПЭВМ с внешними источниками и потребителями информации и обеспечивают согласование сигналов внешних объектов и сигналов, используемых в ПЭВМ. В процессе своей работы они лишь преобразуют данные из одной формы представления информации в другую, не меняя их содержания.
                    Периферийные устройства ПЭВМ различаются по назначению, виду обслуживаемых объектов, физической природе обрабатываемых сигналов и носителей информации, принципу действия, техническим и эксплуатационным характеристикам, конструктивному исполнению и другим признакам. Все периферийные устройства ПЭВМ обычно подразделяют на три большие группы; 1) устройства связи ПЭВМ с человеком-пользователем; 2) устройства связи с объектами контроля и управления; 3) устройства для длительного хранения информации большой емкости.
                    К первой группе относятся устройства ввода-вывода и передачи информации, необходимые для общения человека с машиной, и электронные функциональные модули, их обслуживающие. Это прежде всего клавиатуры, различные планшеты (графоповторители) для работы с чертежами, устройства управления курсором дисплея (манипуляторы типа «мышь», «джойстик» и т. п.), видеотерминалы (дисплеи), печатающие устройства, сканеры, графопостроители. В последние годы быстро развиваются средства ввода-вывода человеческой речи.
                    Во вторую группу периферийных устройств включают устройства связи ПЭВМ с объектами и интерфейсами приборных систем: различные датчики и исполнительные органы, цифроаналоговые (ЦАП) и аналогово-цифровые (АЦП) преобразователи — устройства, необходимые для преобразования непрерывных сигналов с датчиков в цифровые сигналы и обратного преобразования при выдаче информации на исполнительные органы. С помощью периферийных устройств данной группы ПЭВМ приспосабливаются для управления технологическими процессами и оборудованием, автоматизации контроля и измерений, сбора данных и т. п. Все больше ПЭВМ оборудуется также средствами телеобработки, позволяющими подключать ПЭВМ к локальным и распределенным сетям ЭВМ. Значительный интерес представляют модемы — периферийные устройства, позволяющие передавать информацию от одной ПЭВМ к другой по телефонному каналу.
                    Третью группу периферийных устройств ПЭВМ составляют внешние запоминающие устройства (ВЗУ): накопители на гибких и жестких магнитных дисках, на магнитных лентах, на микросборках ЦМД. Серьезными конкурентами накопителям на магнитных носителях информации в ПЭВМ являются накопители на магнитооптических и оптических дисках.
                    Характерна также классификация периферийных устройств в зависимости от выполняемых ими в ПЭВМ функций. В соответствии с ней периферийные устройства ПЭВМ можно разделить на две категории. К первой относятся периферийные устройства, без которых практически невозможно функционирование вычислительной системы: клавиатуры, накопители на магнитных дисках, дисплеи, печатающие устройства, т. е. периферийные устройства, входящие в базовый комплект ПЭВМ. Такие периферийные устройства часто называют системными (общего назначения). Ко второй категории относят устройства, которые предоставляют дополнительные возможности пользователю профессиональной ПЭВМ, позволяя создавать рациональную конфигурацию вычислительной системы в зависимости от ее конкретной профессиональной ориентации (накопители на магнитной ленте, манипуляторы, графические планшеты, графопостроители, сканеры, коммуникационные и интерфейсные адаптеры, средства мультимедиа и т.д.). Подобные периферийные устройства называют дополнительными.
                    Особенности подключения периферийных устройств к ПЭВМ. Подключение различных по функциональному назначению, принципу работы, интерфейсу и конструктивному исполнению периферийных устройств к центральному процессору ПЭВМ осуществляется через электронные функциональные модули. Эти модули выполняют обычно согласование интерфейсов периферийного устройства и системной шины ПЭВМ, буферизацию информации, а также некоторые локальные функции, часто сложные, освобождая от них центральный процессор.
                    Электронные функциональные модули, обслуживающие работу периферийных устройств в составе ПЭВМ, аналогично самим периферийным устройствам, могут быть разделены на две группы.
                    Модули первой группы управляют работой системных периферийных устройств, их называют контроллерами (управляющими устройствами). Модули второй группы приспосабливают дополнительные периферийные устройства для работы с ПЭВМ. Поскольку модули служат для адаптирования внешних сигналов периферийных устройств к сигналам системной шины ПЭВМ, их часто называют адаптерами. Такое деление электронных функциональных модулей ПЭВМ довольно условно, поэтому в литературе понятия «контроллер» и «адаптер» в большинстве случаев считаются синонимами.
                    Принцип подсоединения периферийных устройств к ПЭВМ (как системных, так и дополнительных) единый: через системную шину к центральному процессору подключается электронный функциональный модуль, управляющий работой данного периферийного устройства, этот же модуль электрически соединяется кабелем с самим периферийным устройством.
                    Для подключения к ПЭВМ периферийных устройств, производимых различными предприятиями (фирмами), наборы сигналов, передаваемых по кабелю и разъемным соединителям, техническое исполнение, а также правила обмена информацией между периферийным устройством и адаптером образуют систему, называемую интерфейсом периферийного устройства. Поэтому иногда электронные функциональные модули называют также интерфейсами, что, однако, не отражает сути последнего понятия. В профессиональной ПЭВМ обычно реализуются стандартные или унифицированные интерфейсы для подключения клавиатуры, дисплея, внешних запоминающих и других устройств.
                    Электронные функциональные модули, адаптирующие к ПЭВМ периферийные устройства, осуществляют не только управление периферийным устройством, но и обмен данными через системную шину между центральным процессором и периферийным устройством. Они представляют собой сложные устройства и часто содержат микропроцессорные схемы. Для управления процессом обмена информацией предварительно составляются и записываются в память специальные управляющие программы — драйверы. При необходимости выполнения операции ввода-вывода работа текущей программы прерывается и управление передается драйверу (через системную шину необходимая команда поступает к адаптеру, который через соответствующий интерфейс взаимодействует с подключенным периферийным устройством). По окончании работы периферийного устройства управление снова передается основной программе.

                    <p>1.2.Критерии выбора периферийных устройств
                    При выборе периферийных устройств и дополнительных электронных функциональных модулей пользователь ПЭВМ должен принимать во внимание их совместимость с используемой ПЭВМ, технические параметры (скорость обмена информацией, мощность, надежность работы и т. д.), которые должны соответствовать характеристикам ПЭВМ, а также наличие служб технического обслуживания и ремонта, запасных частей и других принадлежностей (например, НГМД, ленты и бумаги для печати).
                    Важное значение для профессиональных ПЭВМ имеет возможность использования средств машинной графики — аппаратуры (графических дисплеев, графопостроителей, устройств ввода и обработки графических изображений), методов и приемов для преобразования данных в их графическое представление и наоборот.
                    Характеристики периферийных устройств (стоимость, масса и габаритные размеры, быстродействие, надежность и др.) в основном определяют характеристики всей вычислительной системы на базе ПЭВМ. Во многом это связано с тем, что традиционно периферийные устройства содержат большое количество громоздких и дорогостоящих, медленнодействующих и малонадежных электромеханических, а также механических узлов и деталей. Применение указанных узлов в периферийных устройствах сдерживает возможности комплексной микроминиатюризации ПЭВМ и обусловливает невысокие эксплуатационные характеристики периферийных устройств. В настоящее время в мире разрабатываются более совершенные малогабаритные периферийные устройства для ПЭВМ, в том числе основанные на нетрадиционных принципах преобразования и хранения информации.

                    <p>1.3.Кодирование информации
                    Так как большинство внешних устройств (ВУ) позволяет человеку общаться с ЭВМ на привычном ему языке слов и десятичных чисел, а ЭВМ понимает лишь язык физических состояний, кодируемых двоичными числами, то в ВУ обычно производится кодирование (декодирование) информации, пересылаемой в (из) микроЭВМ. Для кодирования русских (33 буквы) и латинских (26 букв) прописных и строчных букв, а также различных графических (например, символа %) и служебных (например, код для перевода строки в пишущей машинке) символов необходимо иметь более чем 27=128 различных кодов. Поэтому кодирование обычно производится в 8-битовом (1-байтовом) коде обмена информацией.
                    Так как ВУ имеют достаточно много механических элементов, то они менее надежны, чем электронные схемы процессора и памяти. Причиной неправильного восприятия кода считываемого символа могут быть пыль на считывающих головках накопителей на магнитных лентах или дисках, царапины на самих лентах и дисках и т. п. Искажения из-за электрических помех возникают и при передаче данных между процессором (памятью) и ВУ (контроллером ВУ). Короче говоря, если надо ввести, вывести или передать символы, то могут появиться ошибки. Для обнаружения таких ошибок (а иногда и для их исправления) коды символов преобразуют в какую-либо стандартную форму (например, добавляют еще один бит, чтобы в новом коде было четное число единиц). При передаче такого стандартного кода производится определенного вида контроль (например, контроль четности), и по его результатам принимается решение об использовании полученного символа.

                    <p>1.4.Способы обмена данными между ВУ и микроЭВМ
                    Существуют два способа передачи слов информации по линиям данных между ВУ и микроЭВМ:
                    параллельный, когда одновременно пересылаются все биты слова;
                    последовательный, когда биты слова пересылаются поочередно, начиная, например, с его младшего разряда.
                    Так как между отдельными проводниками шины для параллельной передачи данных существует электрическая емкость, то при изменении сигнала, передаваемого по одному из проводников, возникает помеха (короткий выброс напряжения) на других проводниках. С увеличением длины шины (увеличением емкости проводников) помехи возрастают и могут восприниматься приемником как сигналы. Поэтому рабочее расстояние для шины параллельной передачи данных ограничивается длиной 1—2 м, и только за счет существенного удорожания шины или снижения скорости передачи длину шины можно увеличить до 10—20 м.
                    Указанное обстоятельство и желание использовать для дистанционной передачи информации телеграфные и телефонные линии обусловили широкое распространение способа последовательного обмена данными между ВУ и микроЭВМ и между несколькими микроЭВМ.
                    Возможны два режима последовательной передачи данных: синхронный и асинхронный.
                    При синхронной последовательной передаче каждый передаваемый бит данных сопровождается импульсом синхронизации, информирующим приемник о наличии на линии информационного бита. Следовательно, между передатчиком и приемником должны быть протянуты минимум три провода: два для передачи импульсов синхронизации и битов данных, а также общий заземленный проводник. Если же передатчик (например, микроЭВМ) и приемник (например, дисплей) разнесены на несколько метров, то каждый из сигналов (информационный и синхронизирующий) придется посылать либо по экранированному (телевизионному) кабелю, либо с помощью витой пары проводов, один из которых заземлен или передает сигнал, инверсный основному.
                    Синхронная последовательная передача начинается с пересылки в приемник одного или двух символов синхронизации (не путать с импульсами синхронизации). Получив такой символ (символы), приемник начинает прием данных и их преобразование в параллельный формат. Естественно, что при такой организации синхронной последовательной передачи она целесообразна лишь для пересылки массивов слов, а не отдельных символов. Это обстоятельство, а также необходимость использования для обмена сравнительно дорогих (четырехпроводных или кабельных) линий связи помешало широкому распространению синхронной последовательности передачи данных.
                    Асинхронная последовательная передача данных означает, что у передатчика и приемника нет общего генератора синхроимпульсов и что синхронизирующий сигнал не посылается вместе с данными. Как же в таком случае приемник будет узнавать о моментах начала и завершения передачи битов данных? Опишем простую процедуру, которую можно использовать, если передатчик и приемник асинхронной последовательной передачи данных согласованы по формату и скорости передачи.
                    Стандартный формат асинхронной последовательной передачи данных, используемый в ЭВМ и ВУ, содержит n пересылаемых битов информации (при пересылке символов n равно 7 или 8 битам) и 3-4 дополнительных бита: стартовый бит, бит контроля четности (или нечетности) и 1 или 2 стоповых бита (рис. 1.1, а). Когда передатчик бездействует (данные не посылаются в линию), на линии сохраняется уровень сигнала, соответствующий логической 1.
















                    Рис. 1.1. Формат асинхронной последовательной передачи данных
                    Передатчик может начать пересылку символа в любой момент времени посредством генерирования стартового бита, т. е. перевода линии в состояние логического 0 на время, точно равное времени передачи бита. Затем происходит передача битов символа начиная с младшего значащего бита, за которым следует дополнительный бит контроля по четности или нечетности. Далее с помощью стопового бита линия переводится в состояние логической 1 (рис. 1.1, б). При единичном бите контроля стоповый бит не изменяет состояния сигнала на линии (рис. 1.1, в). Состояние логической 1 должно поддерживаться в течение промежутка времени, равного 1 или 2 временам передачи бита.
                    Промежуток времени от начала стартового бита до конца стопового бита (стоповых битов) называется кадром. Сразу после стоповых битов передатчик может посылать новый стартовый бит, если имеется другой символ для передачи; в противном случае уровень логической 1 может сохраняться на протяжении всего времени, пока бездействует передатчик. Новый стартовый бит может быть послан в любой момент времени после окончания стопового бита, например, через промежуток времени, равный 0,43 или 1,5 времени передачи бита.
                    В линиях последовательной передачи данных передатчик и приемник должны быть согласованы по всем параметрам формата, изображенного на рис. 1.1, включая номинальное время передачи бита. Для этого в приемнике устанавливается генератор синхроимпульсов, частота которого должна совпадать с частотой аналогичного генератора передатчика. Кроме того, для обеспечения оптимальной защищенности сигнала от искажения, шумов и разброса частоты синхроимпульсов приемник должен считывать принимаемый бит в середине его длительности.
                    Рассмотрим работу приемника с того момента, когда он окончил прием символа данных и перешел в режим обнаружения стартового бита следующего слова.
                    Если линия перешла в состояние логического нуля и находится в этом состоянии в течение времени, не меньшего половины временного интервала передачи бита, то приемник переводится в режим считывания битов информации. В противном случае приемник остается в режиме обнаружения, так как вероятнее всего это был не стартовый бит, а шумовая помеха. В новом режиме приемник вырабатывает сигналы считывания через интервалы, равные времени передачи бита, т. е. выполняет считывание и сохранение принимаемых битов примерно на середине их передачи. Аналогичным образом будут считаны бит контроля по четности и сигнал логической единицы (стоповый бит). Если оказалось, что на месте стопового бита обнаружен сигнал логического нуля, то произошла «Ошибка кадра» и символ принят неправильно. Иначе проверяется, четно ли общее число единиц в информационных битах и бите контроля, и если оно четно, производится запись принятого символа в буфер приемника.
                    Передний фронт стартового бита сигнализирует о начале поступления передаваемой информации, а момент его появления служит точкой отсчета времени для считывания битов данных. Стоповый бит предоставляет время для записи принятого символа в буфер приемника и обеспечивает возможность выявления ошибки кадра. Наиболее часто ошибки кадра появляются тогда, когда приемник ошибочно синхронизирован с битом 0, который в действительности не является стартовым битом. Если передатчик бездействует (посылает сигнал логической единицы) в течение одного кадра или более, то всегда можно восстановить правильную синхронизацию. Хуже обстоит дело при рассинхронизации генераторов передатчика и приемника, когда временной интервал между сигналами считывания принимаемых битов будет меньше или больше времени передачи бита.
                    <p>1.5.Дистанционная связь
                    Когда микроЭВМ должна обмениваться данными с удаленными ВУ или другими микроЭВМ (находящимися в другой комнате, другом конце здания или другом доме), то возникает вопрос: как и с помощью чего связать эти объекты. Относительно большое расстояние между объектами предопределяет последовательный (побитный) обмен данными. Это же расстояние обусловливает экономическую нецелесообразность использования для связи специальных кабельных линий и наводит на мысль об обмене через телефонные линии или радиоканал.
                    Телефонные линии предназначены для передачи человеческого голоса, а не цифровых данных. Двухуровневые сигналы (рис. 1.2, а) претерпевают значительные искажения во время их передачи по телефонным линиям, что приводит к изменению передаваемых данных. В то же время синусоидальный сигнал с частотой от 1000 до 2500 Гц, называемой несущей, может быть передан с относительно малыми искажениями. Поскольку значения простой синусоидальной волны полностью предсказуемы, то она сама по себе не передает никакой информации. Однако путем изменения ее амплитуды, частоты или фазы можно передавать последовательность нулей и единиц, как это показано на рис. 1.2. Такой процесс называют модуляцией.
                    При амплитудной модуляции (рис. 1.2, б) для представления значений 0 и 1 используются соответственно два различных уровня напряжения. Если послушать такую передачу цифровых данных с очень низкой скоростью передачи, то можно услышать громкий фон при 1 и не услышать никакого фона при 0. При частотной модуляции (рис. 1.2, в) уровень напряжения сохраняется постоянным, однако несущая частота принимает различные значения для 1 и 0. Если послушать передачу частотно-модулированных цифровых данных, то можно услышать два фона, соответствующих 0 и 1.
                    Таким образом, когда микроЭВМ должна быть связана с ВУ или другой ЭВМ по телефонному каналу (любой двухпроводной линии связи или радиоканалу), между ними следует установить устройства для преобразования данных из параллельного кода в последовательный код (двухуровневый сигнал напряжения) и для обратного преобразования, а также для преобразования двухуровневого сигнала напряжения в амплитудно-, частотно- или фазово-модулированный сигнал и для обратного преобразования (рис. 1.2, г). Последнее устройство получило название модем (модулятор-демодулятор).



                    Рис. 1.2. Побитовая передача данных по линии связи

                    Для надежной расшифровки модулированной информации передаваемые биты должны быть преобразованы в достаточно представительные части синусоидальной волны, частота которой ограничивается полосой пропускания линии связи (для телефонного канала полоса пропускания 3000 Гц). Это накладывает ограничения на скорость передачи цифровой информации по каналу связи. При частотной модуляции, когда для представления 0 и 1 используются токовые сигналы с частотами 1070 и 1270 Гц, скорость передачи информации не должна превышать 1200 бит/с. Для увеличения этой скорости применяют более сложные методы модуляции, при которых каждый передаваемый сигнальный элемент кодирует не один, а несколько битов. Это позволяет поднять скорость передачи по телефонной линии до 9600 бит/с, а по специальной линии —до 19,2К бит/с.
                    При передаче данных по линиям связи используются три режима: симплексный (от лат. simplex — простой), полудуплексный и дуплексный (от лат. duplех—двойной). Симплексная линия обеспечивает передачу данных только в одном направлении. Причиной этого являются не какие-то особенности проводов, а просто тот факт, что на одном конце линии имеется только передающее устройство, а на другом конце — только приемное. Полудуплексная связь обеспечивает передачу и получение информации в обоих направлениях, но не одновременно. Во время любой передачи один модем посылает, а другой получает. Дуплексная связь обеспечивает передачу и получение данных в обоих направлениях одновременно. Большинство модемов может обеспечить дуплексную связь с помощью одной телефонной линии. Это достигается путем использования другой пары частот для связи в обратном направлении, например: 2025 Гц - для представления 0 и 2225 Гц-для представления 1.

                    <p>1.6.Устройства связи человек — микроЭВМ
                    Кнопки, переключатели и клавиатура — это простейшее устройство для ввода информации в микроЭВМ. С их помощью могут вводиться те или иные данные (программы), устанавливаться режимы работы микроЭВМ и управляемых ею устройств, передаваться команды и т. д.
                    Общая проблема, возникающая при использовании таких устройств ввода, состоит в том, что электромеханические переключатели не могут обеспечить четкого фронта сигнала замыкания (размыкания). В момент нажатия кнопки (переключения тумблера, клавиши и т. п.), стоящей в электрической цепи, происходит нерегулярное замыкание этой цепи до тех пор, пока не установится надежный контакт. Длительность этого периода зависит от конструкции кнопки (переключателя), но обычно не превышает 2 мс. Нестабильность сигнала («дребезг контакта») устраняют аппаратным (схемным) или программным способом. В последнем случае, когда микроЭВМ обнаруживает замыкание (размыкание) цепи, она начинает выполнять программный цикл задержки в течение времени, достаточного для прекращения скачков напряжения. Программа может быть составлена так, чтобы в это время могла выполняться другая работа.
                    Устройства речевого обмена информацией позволяют ускорить и упростить для человека ввод информации в ЭВМ и получать «подсказки» от ЭВМ при выполнении какой-либо работы, не отвлекаясь при этом на просмотр документов или экрана дисплея.
                    Речь представляет собой последовательность дискретных звуковых сегментов, называемых фонемами, которые связаны друг с другом во времени. Каждой фонеме свойственны собственные различимые звуковые характеристики. Произносимое слово состоит из нескольких слогов, каждый из которых образуется несколькими фонемами; характеристики любой данной фонемы зависят от ее непосредственного фонетического окружения, или условий сочленения.
                    Последнее обстоятельство приводит к тому, что одна и та же фонема имеет различное звучание в разных словах, а это затрудняет задачу разделения конкретного слова на составляющие фонемы. Кроме того, поскольку эффект сочленения может распространяться и за пределы слов, распознавание связной речи гораздо труднее распознавания отдельных слов. Задача еще больше усложняется тем, что произношение у разных людей различно и даже не всегда одинаково у одного и того же человека.
                    Упрощения устройств (программ) распознавания речи добиваются путем ограничения их словаря (до нескольких десятков слов) и настройки системы на конкретного «диктора». Перед началом применения системы пользователь формирует определенный словарь. Затем он несколько раз произносит каждое слово, чтобы дать возможность машине запомнить варианты произношения, и после этого система оказывается готовой к работе. Она «слушает» слова, произносимые пользователем, и сопоставляет их с эталонами, хранящимися в словарной базе данных. Если обнаруживается совпадение, идентифицируется соответствующее слово; в противном случае пользователь делает повторную попытку речевого ввода либо вводит информацию традиционным способом (например, с клавиатуры).
                    Синтез речи, или процесс формирования речевых сигналов из фрагментов цифровых данных, находящихся в памяти ЭВМ, проще всего реализуется путем составления ответа из слов, введенных пользователем на этапе обучения ЭВМ. В этом случае машина выводит информацию голосом пользователя.
                    <p>1.7.Устройства для связи микроЭВМ с объектами управления
                    МикроЭВМ управляют станками и игровыми автоматами, ходом научных экспериментов и доильными аппаратами, автомобилями и роботами. В этих (а также других) устройствах, приборах и системах используется много серийных электрических датчиков и исполнительных органов (например, электродвигателей), работающих с непрерывными (аналоговыми) электрическими сигналами. Для связи таких датчиков и исполнительных органов с микроЭВМ требуется преобразовать аналоговый сигнал в число, пропорциональное амплитуде этого сигнала, и наоборот.




                    Рис. 1.3. Дискретизация и квантование непрерывного сигнала Х (I)
                    Процедура аналогоцифрового преобразования состоит из двух этапов: дискретизации по времени (выборки) и квантования по уровню. Процесс дискретизации состоит из измерения значений непрерывного сигнала Х(t) только в дискретные моменты времени 0, Т, 2Т, ..., отстоящие друг от друга на величину периода дискретизации Т (рис. 1.3).
                    Такой измерительный процесс, если он реализуется без необходимых мер предосторожности, может привести к возникновению значительных погрешностей. Важно иметь достаточное число отсчетов за единицу времени для правильного представления существенной информации, содержащейся в высокочастотной составляющей этого сигнала. В то же время частые измерения требуют увеличения быстродействия преобразования и обработки, а следовательно, сложности и стоимости преобразователя. Поэтому темп дискретизации необходимо поддерживать на минимально допустимом уровне, при котором составляющая общей погрешности, обусловленная процессом дискретизации, не превышает установленных пределов.
                    Для квантования диапазон изменения входного сигнала подразделяется на равные интервалы (уровни квантования): ...,-5Х/2, -ЗХ/2, - Х/2, - Х/2, 3Х/2, 5Х/2, ..., где Х—интервал (шаг квантования). Операция квантования сводится к определению того интервала, в который попало дискретизированное значение Х(t), и к присваиванию выходному значению Х*(t) цифрового кода, соответствующего значению центра найденного интервала. При такой замене может быть допущена ошибка, равная Х/2. Для ускорения процесса преобразования, упрощения и удешевления преобразователя надо выбирать максимально допустимый шаг квантования, при котором еще не появляются большие погрешности.
                    При проектировании систем, в которых должны использоваться аналогоцифровые или цифроаналоговые преобразователи, следует иметь хотя бы минимальное представление о принципах работы этих преобразователей.
                    Цифроаналоговый преобразователь (ЦАП) служит для преобразования числа в пропорциональную аналоговую величину, представленную в виде электрического напряжения, тока и т. п. Цифровая информация вводится чаще всего в виде параллельного кода преобразуемого числа, а аналоговая информация представлена в виде одного сигнала, величина которого является носителем информации.
                    Существует множество способов построения ЦАП, но наиболее часто применяют схемы, построенные на операционном усилителе и резисторах (рис. 1.4).




                    Рис. 1.4. Цифроаналоговый преобразователь с весовыми резисторами

                    Усилитель, работающий в режиме сумматора, имеет п входных резисторов, где n — число двоичных разрядов, используемых для представления преобразуемого числа X*. Сопротивления этих резисторов — R/20, R/21, ..., R/2n-1
                    Один зажим каждого из резисторов подсоединен к электронному ключу, состояние которого определяется значением соответствующего разряда преобразуемого числа, находящегося в регистре Рг. Если двоичный разряд — единица, то резистор соединяется с источником опорного напряжения Е; в противном случае ключ разомкнут. Так как величина выходного сигнала такой схемы равна отрицательной сумме входных напряжений с весовыми коэффициентами, равными отношению сопротивления обратной связи усилителя к соответствующему входному сопротивлению, то при    Х*=0 ... 001 сигнал Х=-Е, при Х*=0 ... 010 сигнал Х=-2Е,  при X* = 0 ... 011 сигнал Х=-3Е и т. д.
                    Для получения сигнала со знаком преобразуемое число представляют в дополнительном коде и его старший разряд (знаковый разряд) используют для управления ключом, который может добавить к Х напряжение +2n-1 Е. Так, если Х* = 11 ... 111 (-1 в дополнительном коде), то Х= -E(2n-2+2n-3+ ... +2+1) и после суммирования этого сигнала с +2n-1E выходное напряжение ЦАП будет равно +E, т. е., пропорционально -1.
                    Существует модификация рассмотренного ЦАП, в которой для уменьшения количества номиналов резисторов используют цепную схему, составленную из вдвое большего числа резисторов всего лишь двух номиналов — К и 2К. Есть также и ЦАП, основанные на других принципах преобразования цифрового кода в напряжение или ток.
                    Нетрудно заметить, что для повышения точности представления числа недостаточно простого увеличения разрядности ЦАП. Необходимо также повышать точность изготовления резисторов, стабильность опорного напряжения Е, линейность операционного усилителя и ряд других параметров схемы. Поэтому выбор того или иного серийного ЦАП только по одному параметру — разрядности является грубейшей ошибкой.
                    Аналогоцифровой преобразователь служит для преобразования аналогового сигнала (например, электрического напряжения) в код числа. Существует много способов построения АЦП, каждый из которых обладает своими достоинствами и недостатками. В серийных полупроводниковых интегральных АЦП наибольшее распространение получили два из них; последовательное приближение и параллельное преобразование.
                    В АЦП, построенных по методу последовательного приближения, используются регистр последовательного приближения, ЦАП, сравнивающее устройство (компаратор), тактовый генератор и схема управления. Перед измерением все разряды регистра устанавливаются в 0. При получении приказа на преобразование каждый из разрядов регистра, начиная со старшего, поочередно устанавливаются в 1.
                    Если выходной сигнал ЦАП, связанного с этим регистром, не превышает уровня входного аналогового сигнала, разряд остается в состоянии 1; в противном случае разряд сбрасывается обратно в 0. Для n-разрядного АЦП необходимо совершить n таких шагов. Подобный процесс может быть представлен как двоичный поиск, начинающийся с середины. В модуле АЦП последовательного приближения имеются вход «Начало преобразования» и выход «Преобразование выполнено». Все такие преобразователи имеют параллельный цифровой выход (все разряды выводятся одновременно по n-разрядной шине) и, как правило, еще и последовательный выход (n разрядов выходного кода выдаются последовательно, начиная со старших разрядов, по одной линии).
                    АЦП последовательного приближения обладают относительно высокой точностью и достаточно высоким быстродействием: для n-разрядного преобразования требуется выполнить только n обращений к ЦАП, который может выполнить одно преобразование за время от десятых долей до нескольких микросекунд (в зависимости от типа и разрядности). Для того чтобы изменение аналогового сигнала во время от начала преобразования до его окончания не влияло на точность преобразования, обычно используют специальные схемы, запоминающие аналоговый сигнал. Устройства выборки-хранения обеспечивают выборку мгновенного значения аналогового сигнала и хранение его с заданной точностью во время преобразования в АЦП. Существуют АЦП и со встроенными схемами выборки-хранения.
                    Значительно большим быстродействием отличаются АЦП параллельного кодирования. В них для преобразования аналогового сигнала в n-разрядный двоичный код используется 2n-1 компараторов (сравнивающих устройств). На один из двух дифференциальных входов каждого компаратора подается свое опорное напряжение, формируемое резисторным делителем. Разность между опорными напряжениями двух ближайших компараторов равна Е/2, где Е — опорное напряжение, соответствующее максимальному значению преобразуемого аналогового сигнала. Другие входы компараторов объединены, и на них подается входной сигнал. Приоритетный шифратор формирует выходной цифровой сигнал, соответствующий самому старшему сработавшему компаратору.
                    Способ параллельного кодирования (иногда он называется способом мгновенного кодирования) отличается наибольшим быстродействием. Время задержки при передаче сигнала от входа к выходу равно сумме запаздываний компараторов и шифратора и составляет несколько десятков наносекунд.
                    <p><input type="submit" name="1" value="Отправить на проверку"></p>
                </form>

            </div>
        </div>
    </section>



    <div class="footer-area bg-dark text-gray">
        <!-- popular posts block -->
        <footer id="page-footer" class="font-lato">
            <div class="container">
                <div class="row holder">
                    <div class="col-xs-12 col-sm-push-6 col-sm-6">
                        <ul class="socail-networks list-unstyled">
                            <li><a href="#"><span class="fab fa-facebook"></span></a></li>
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-linkedin"></span></a></li>
                        </ul>
                    </div>
                    <div class="col-xs-12 col-sm-pull-6 col-sm-6">
                        <p><a href="#">Studylms</a> | &copy; 2018 <a href="#">DesignFalls</a>, All rights reserved</p>
                    </div>
                </div>
            </div>
        </footer>
    </div>
</div>
<!-- include jQuery -->
<script src="resources/js/jquery.js"></script>
<!-- include jQuery -->
<script src="resources/js/plugins.js"></script>
<!-- include jQuery -->
<script src="resources/js/jquery.main.js"></script>
<!-- include jQuery -->
<script type="text/javascript" src="resources/js/init.js"></script>

</body>
</html>
